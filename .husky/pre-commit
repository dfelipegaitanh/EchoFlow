#!/usr/bin/env sh
# Husky pre-commit hook: run Pint, Rector, and Prettier on staged files
# - Auto-fixes issues and re-stages modified files
# - Skips gracefully if dependencies are missing

set -e

# Load Husky helpers if available (created by `npm run prepare`)
if [ -f "$(dirname -- "$0")/_/husky.sh" ]; then
  . "$(dirname -- "$0")/_/husky.sh"
fi

# Collect staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR)
if [ -z "$STAGED_FILES" ]; then
  echo "No staged changes. Skipping pre-commit checks."
  exit 0
fi

# Separate by type
STAGED_PHP=$(echo "$STAGED_FILES" | grep -E '\.php$' || true)
# Prettier: include common web files and Blade templates
STAGED_PRETTIER=$(echo "$STAGED_FILES" | grep -E '\.(js|jsx|ts|tsx|json|css|scss|md|yml|yaml|html|vue|svelte|blade\.php)$' || true)

# Run Laravel Pint (PHP code formatter) on staged PHP files
if [ -n "$STAGED_PHP" ] && [ -f "vendor/bin/pint" ]; then
  echo "Running Laravel Pint on staged PHP files..."
  # Pint exits 0 even when it fixes files; we want to continue and re-stage them
  vendor/bin/pint $STAGED_PHP || true
  # Re-stage potentially modified files
  echo "$STAGED_PHP" | xargs -r git add
elif [ -n "$STAGED_PHP" ] && [ ! -f "vendor/bin/pint" ]; then
  echo "Skipping Pint: vendor/bin/pint not found"
fi

# Run Rector (PHP refactoring) on staged PHP files
if [ -n "$STAGED_PHP" ] && [ -f "vendor/bin/rector" ]; then
  echo "Running Rector on staged PHP files..."
  # Apply transformations non-interactively and quietly on just the staged files
  # Rector exit codes: 0=ok, 1=changes made, >1=error. We treat 0/1 as success.
  if vendor/bin/rector process --no-progress -n --ansi $STAGED_PHP; then
    :
  else
    RESULT=$?
    if [ "$RESULT" -eq 1 ]; then
      # Changes were made; re-stage files
      echo "$STAGED_PHP" | xargs -r git add
    else
      echo "❌ Rector failed with exit code $RESULT"
      exit $RESULT
    fi
  fi
elif [ -n "$STAGED_PHP" ] && [ ! -f "vendor/bin/rector" ]; then
  echo "Skipping Rector: vendor/bin/rector not found"
fi

# Run project formatter via npm script (formats the repository)
if [ -d "node_modules" ]; then
  echo "Running npm run format..."
  if ! npm run format; then
    echo "❌ npm run format failed. Please fix formatting issues."
    exit 1
  fi
  # Re-stage any files that were modified by the formatter
  git add -A
else
  echo "Skipping npm format: node_modules not found"
fi

# All done
echo "✅ Pre-commit formatting and refactoring completed."
exit 0
